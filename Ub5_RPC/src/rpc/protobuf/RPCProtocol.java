// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/rpc/protobuf/rpc.proto

package rpc.protobuf;

public final class RPCProtocol {
  private RPCProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RPCCallOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.protobuf.RPCCall)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string classname = 1;</code>
     *
     * <pre>
     * Name der Klasse, in der die aufzurufende statische Methode sich befindet
     * </pre>
     */
    boolean hasClassname();
    /**
     * <code>required string classname = 1;</code>
     *
     * <pre>
     * Name der Klasse, in der die aufzurufende statische Methode sich befindet
     * </pre>
     */
    java.lang.String getClassname();
    /**
     * <code>required string classname = 1;</code>
     *
     * <pre>
     * Name der Klasse, in der die aufzurufende statische Methode sich befindet
     * </pre>
     */
    com.google.protobuf.ByteString
        getClassnameBytes();

    /**
     * <code>required string methodname = 2;</code>
     *
     * <pre>
     * Name der aufzurufenden statischen Methode
     * </pre>
     */
    boolean hasMethodname();
    /**
     * <code>required string methodname = 2;</code>
     *
     * <pre>
     * Name der aufzurufenden statischen Methode
     * </pre>
     */
    java.lang.String getMethodname();
    /**
     * <code>required string methodname = 2;</code>
     *
     * <pre>
     * Name der aufzurufenden statischen Methode
     * </pre>
     */
    com.google.protobuf.ByteString
        getMethodnameBytes();

    /**
     * <code>repeated bytes parameters = 3;</code>
     *
     * <pre>
     * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
     * Die Parameter liegen hier als serialisierte Objekte vor. 
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getParametersList();
    /**
     * <code>repeated bytes parameters = 3;</code>
     *
     * <pre>
     * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
     * Die Parameter liegen hier als serialisierte Objekte vor. 
     * </pre>
     */
    int getParametersCount();
    /**
     * <code>repeated bytes parameters = 3;</code>
     *
     * <pre>
     * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
     * Die Parameter liegen hier als serialisierte Objekte vor. 
     * </pre>
     */
    com.google.protobuf.ByteString getParameters(int index);
  }
  /**
   * Protobuf type {@code rpc.protobuf.RPCCall}
   *
   * <pre>
   * RPC - Diese Nachricht dient dazu einen entfernten Methodeaufruf durchzufuehren.
   * </pre>
   */
  public static final class RPCCall extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:rpc.protobuf.RPCCall)
      RPCCallOrBuilder {
    // Use RPCCall.newBuilder() to construct.
    private RPCCall(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RPCCall(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RPCCall defaultInstance;
    public static RPCCall getDefaultInstance() {
      return defaultInstance;
    }

    public RPCCall getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RPCCall(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              classname_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              methodname_ = bs;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                parameters_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000004;
              }
              parameters_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          parameters_ = java.util.Collections.unmodifiableList(parameters_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rpc.protobuf.RPCProtocol.internal_static_rpc_protobuf_RPCCall_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rpc.protobuf.RPCProtocol.internal_static_rpc_protobuf_RPCCall_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rpc.protobuf.RPCProtocol.RPCCall.class, rpc.protobuf.RPCProtocol.RPCCall.Builder.class);
    }

    public static com.google.protobuf.Parser<RPCCall> PARSER =
        new com.google.protobuf.AbstractParser<RPCCall>() {
      public RPCCall parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RPCCall(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RPCCall> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CLASSNAME_FIELD_NUMBER = 1;
    private java.lang.Object classname_;
    /**
     * <code>required string classname = 1;</code>
     *
     * <pre>
     * Name der Klasse, in der die aufzurufende statische Methode sich befindet
     * </pre>
     */
    public boolean hasClassname() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string classname = 1;</code>
     *
     * <pre>
     * Name der Klasse, in der die aufzurufende statische Methode sich befindet
     * </pre>
     */
    public java.lang.String getClassname() {
      java.lang.Object ref = classname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          classname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string classname = 1;</code>
     *
     * <pre>
     * Name der Klasse, in der die aufzurufende statische Methode sich befindet
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClassnameBytes() {
      java.lang.Object ref = classname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        classname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METHODNAME_FIELD_NUMBER = 2;
    private java.lang.Object methodname_;
    /**
     * <code>required string methodname = 2;</code>
     *
     * <pre>
     * Name der aufzurufenden statischen Methode
     * </pre>
     */
    public boolean hasMethodname() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string methodname = 2;</code>
     *
     * <pre>
     * Name der aufzurufenden statischen Methode
     * </pre>
     */
    public java.lang.String getMethodname() {
      java.lang.Object ref = methodname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          methodname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string methodname = 2;</code>
     *
     * <pre>
     * Name der aufzurufenden statischen Methode
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMethodnameBytes() {
      java.lang.Object ref = methodname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        methodname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARAMETERS_FIELD_NUMBER = 3;
    private java.util.List<com.google.protobuf.ByteString> parameters_;
    /**
     * <code>repeated bytes parameters = 3;</code>
     *
     * <pre>
     * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
     * Die Parameter liegen hier als serialisierte Objekte vor. 
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getParametersList() {
      return parameters_;
    }
    /**
     * <code>repeated bytes parameters = 3;</code>
     *
     * <pre>
     * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
     * Die Parameter liegen hier als serialisierte Objekte vor. 
     * </pre>
     */
    public int getParametersCount() {
      return parameters_.size();
    }
    /**
     * <code>repeated bytes parameters = 3;</code>
     *
     * <pre>
     * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
     * Die Parameter liegen hier als serialisierte Objekte vor. 
     * </pre>
     */
    public com.google.protobuf.ByteString getParameters(int index) {
      return parameters_.get(index);
    }

    private void initFields() {
      classname_ = "";
      methodname_ = "";
      parameters_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasClassname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMethodname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getClassnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMethodnameBytes());
      }
      for (int i = 0; i < parameters_.size(); i++) {
        output.writeBytes(3, parameters_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClassnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMethodnameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < parameters_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(parameters_.get(i));
        }
        size += dataSize;
        size += 1 * getParametersList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static rpc.protobuf.RPCProtocol.RPCCall parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.protobuf.RPCProtocol.RPCCall parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.protobuf.RPCProtocol.RPCCall parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.protobuf.RPCProtocol.RPCCall parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.protobuf.RPCProtocol.RPCCall parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rpc.protobuf.RPCProtocol.RPCCall parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static rpc.protobuf.RPCProtocol.RPCCall parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static rpc.protobuf.RPCProtocol.RPCCall parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static rpc.protobuf.RPCProtocol.RPCCall parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rpc.protobuf.RPCProtocol.RPCCall parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rpc.protobuf.RPCProtocol.RPCCall prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rpc.protobuf.RPCCall}
     *
     * <pre>
     * RPC - Diese Nachricht dient dazu einen entfernten Methodeaufruf durchzufuehren.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.protobuf.RPCCall)
        rpc.protobuf.RPCProtocol.RPCCallOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rpc.protobuf.RPCProtocol.internal_static_rpc_protobuf_RPCCall_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rpc.protobuf.RPCProtocol.internal_static_rpc_protobuf_RPCCall_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rpc.protobuf.RPCProtocol.RPCCall.class, rpc.protobuf.RPCProtocol.RPCCall.Builder.class);
      }

      // Construct using rpc.protobuf.RPCProtocol.RPCCall.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        classname_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        methodname_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        parameters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rpc.protobuf.RPCProtocol.internal_static_rpc_protobuf_RPCCall_descriptor;
      }

      public rpc.protobuf.RPCProtocol.RPCCall getDefaultInstanceForType() {
        return rpc.protobuf.RPCProtocol.RPCCall.getDefaultInstance();
      }

      public rpc.protobuf.RPCProtocol.RPCCall build() {
        rpc.protobuf.RPCProtocol.RPCCall result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rpc.protobuf.RPCProtocol.RPCCall buildPartial() {
        rpc.protobuf.RPCProtocol.RPCCall result = new rpc.protobuf.RPCProtocol.RPCCall(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.classname_ = classname_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.methodname_ = methodname_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          parameters_ = java.util.Collections.unmodifiableList(parameters_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.parameters_ = parameters_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rpc.protobuf.RPCProtocol.RPCCall) {
          return mergeFrom((rpc.protobuf.RPCProtocol.RPCCall)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rpc.protobuf.RPCProtocol.RPCCall other) {
        if (other == rpc.protobuf.RPCProtocol.RPCCall.getDefaultInstance()) return this;
        if (other.hasClassname()) {
          bitField0_ |= 0x00000001;
          classname_ = other.classname_;
          onChanged();
        }
        if (other.hasMethodname()) {
          bitField0_ |= 0x00000002;
          methodname_ = other.methodname_;
          onChanged();
        }
        if (!other.parameters_.isEmpty()) {
          if (parameters_.isEmpty()) {
            parameters_ = other.parameters_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureParametersIsMutable();
            parameters_.addAll(other.parameters_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClassname()) {
          
          return false;
        }
        if (!hasMethodname()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        rpc.protobuf.RPCProtocol.RPCCall parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rpc.protobuf.RPCProtocol.RPCCall) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object classname_ = "";
      /**
       * <code>required string classname = 1;</code>
       *
       * <pre>
       * Name der Klasse, in der die aufzurufende statische Methode sich befindet
       * </pre>
       */
      public boolean hasClassname() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string classname = 1;</code>
       *
       * <pre>
       * Name der Klasse, in der die aufzurufende statische Methode sich befindet
       * </pre>
       */
      public java.lang.String getClassname() {
        java.lang.Object ref = classname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            classname_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string classname = 1;</code>
       *
       * <pre>
       * Name der Klasse, in der die aufzurufende statische Methode sich befindet
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClassnameBytes() {
        java.lang.Object ref = classname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          classname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string classname = 1;</code>
       *
       * <pre>
       * Name der Klasse, in der die aufzurufende statische Methode sich befindet
       * </pre>
       */
      public Builder setClassname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        classname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string classname = 1;</code>
       *
       * <pre>
       * Name der Klasse, in der die aufzurufende statische Methode sich befindet
       * </pre>
       */
      public Builder clearClassname() {
        bitField0_ = (bitField0_ & ~0x00000001);
        classname_ = getDefaultInstance().getClassname();
        onChanged();
        return this;
      }
      /**
       * <code>required string classname = 1;</code>
       *
       * <pre>
       * Name der Klasse, in der die aufzurufende statische Methode sich befindet
       * </pre>
       */
      public Builder setClassnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        classname_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object methodname_ = "";
      /**
       * <code>required string methodname = 2;</code>
       *
       * <pre>
       * Name der aufzurufenden statischen Methode
       * </pre>
       */
      public boolean hasMethodname() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string methodname = 2;</code>
       *
       * <pre>
       * Name der aufzurufenden statischen Methode
       * </pre>
       */
      public java.lang.String getMethodname() {
        java.lang.Object ref = methodname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            methodname_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string methodname = 2;</code>
       *
       * <pre>
       * Name der aufzurufenden statischen Methode
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMethodnameBytes() {
        java.lang.Object ref = methodname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          methodname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string methodname = 2;</code>
       *
       * <pre>
       * Name der aufzurufenden statischen Methode
       * </pre>
       */
      public Builder setMethodname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        methodname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string methodname = 2;</code>
       *
       * <pre>
       * Name der aufzurufenden statischen Methode
       * </pre>
       */
      public Builder clearMethodname() {
        bitField0_ = (bitField0_ & ~0x00000002);
        methodname_ = getDefaultInstance().getMethodname();
        onChanged();
        return this;
      }
      /**
       * <code>required string methodname = 2;</code>
       *
       * <pre>
       * Name der aufzurufenden statischen Methode
       * </pre>
       */
      public Builder setMethodnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        methodname_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> parameters_ = java.util.Collections.emptyList();
      private void ensureParametersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          parameters_ = new java.util.ArrayList<com.google.protobuf.ByteString>(parameters_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated bytes parameters = 3;</code>
       *
       * <pre>
       * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
       * Die Parameter liegen hier als serialisierte Objekte vor. 
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getParametersList() {
        return java.util.Collections.unmodifiableList(parameters_);
      }
      /**
       * <code>repeated bytes parameters = 3;</code>
       *
       * <pre>
       * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
       * Die Parameter liegen hier als serialisierte Objekte vor. 
       * </pre>
       */
      public int getParametersCount() {
        return parameters_.size();
      }
      /**
       * <code>repeated bytes parameters = 3;</code>
       *
       * <pre>
       * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
       * Die Parameter liegen hier als serialisierte Objekte vor. 
       * </pre>
       */
      public com.google.protobuf.ByteString getParameters(int index) {
        return parameters_.get(index);
      }
      /**
       * <code>repeated bytes parameters = 3;</code>
       *
       * <pre>
       * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
       * Die Parameter liegen hier als serialisierte Objekte vor. 
       * </pre>
       */
      public Builder setParameters(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParametersIsMutable();
        parameters_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes parameters = 3;</code>
       *
       * <pre>
       * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
       * Die Parameter liegen hier als serialisierte Objekte vor. 
       * </pre>
       */
      public Builder addParameters(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureParametersIsMutable();
        parameters_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes parameters = 3;</code>
       *
       * <pre>
       * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
       * Die Parameter liegen hier als serialisierte Objekte vor. 
       * </pre>
       */
      public Builder addAllParameters(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureParametersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, parameters_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes parameters = 3;</code>
       *
       * <pre>
       * Liste aller Parameter mit denen die statische Methode aufzurufen ist.
       * Die Parameter liegen hier als serialisierte Objekte vor. 
       * </pre>
       */
      public Builder clearParameters() {
        parameters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:rpc.protobuf.RPCCall)
    }

    static {
      defaultInstance = new RPCCall(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:rpc.protobuf.RPCCall)
  }

  public interface RPCResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.protobuf.RPCResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes result = 1;</code>
     *
     * <pre>
     * Rueckgabewert des RPC. Diese Wert muss vorhanden sein, falls keine Exception
     * waerend des Aufrufes aufgetreten ist. Der Rueckgabewert liegt (analog zu den 
     * Parametern des RPC als serialisiertes Objekte vor. Falls die aufgerufende Methode
     * keinen Rueckgabewerte hatte, so ist hier 'null' zu uebertragen
     * (diese Verhalten wird automatisch von Method#invoke(Class&lt;?&gt; clazz, Object... args)
     * gewaehrleistet.
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>optional bytes result = 1;</code>
     *
     * <pre>
     * Rueckgabewert des RPC. Diese Wert muss vorhanden sein, falls keine Exception
     * waerend des Aufrufes aufgetreten ist. Der Rueckgabewert liegt (analog zu den 
     * Parametern des RPC als serialisiertes Objekte vor. Falls die aufgerufende Methode
     * keinen Rueckgabewerte hatte, so ist hier 'null' zu uebertragen
     * (diese Verhalten wird automatisch von Method#invoke(Class&lt;?&gt; clazz, Object... args)
     * gewaehrleistet.
     * </pre>
     */
    com.google.protobuf.ByteString getResult();

    /**
     * <code>optional bytes exception = 2;</code>
     *
     * <pre>
     * Falls waerend des RPCs ein Versagen auftritt (die Methode kann nicht gefunden werden,
     * die Klasse kann nicht gefunden werden, die Methode wirft eine Exception) dann wird
     * mit diesem Feld die aufgetretende Exception an den Aufrufenden zurueck geliefert.
     * </pre>
     */
    boolean hasException();
    /**
     * <code>optional bytes exception = 2;</code>
     *
     * <pre>
     * Falls waerend des RPCs ein Versagen auftritt (die Methode kann nicht gefunden werden,
     * die Klasse kann nicht gefunden werden, die Methode wirft eine Exception) dann wird
     * mit diesem Feld die aufgetretende Exception an den Aufrufenden zurueck geliefert.
     * </pre>
     */
    com.google.protobuf.ByteString getException();
  }
  /**
   * Protobuf type {@code rpc.protobuf.RPCResult}
   *
   * <pre>
   * Ergebnis es RPC - Diese Nachricht dient dazu das Ergebnis eines entfernten Methodenaufrufen
   * an den Aufrufenden zurueck zu liefern.
   * </pre>
   */
  public static final class RPCResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:rpc.protobuf.RPCResult)
      RPCResultOrBuilder {
    // Use RPCResult.newBuilder() to construct.
    private RPCResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RPCResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RPCResult defaultInstance;
    public static RPCResult getDefaultInstance() {
      return defaultInstance;
    }

    public RPCResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RPCResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              result_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              exception_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rpc.protobuf.RPCProtocol.internal_static_rpc_protobuf_RPCResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rpc.protobuf.RPCProtocol.internal_static_rpc_protobuf_RPCResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rpc.protobuf.RPCProtocol.RPCResult.class, rpc.protobuf.RPCProtocol.RPCResult.Builder.class);
    }

    public static com.google.protobuf.Parser<RPCResult> PARSER =
        new com.google.protobuf.AbstractParser<RPCResult>() {
      public RPCResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RPCResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RPCResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString result_;
    /**
     * <code>optional bytes result = 1;</code>
     *
     * <pre>
     * Rueckgabewert des RPC. Diese Wert muss vorhanden sein, falls keine Exception
     * waerend des Aufrufes aufgetreten ist. Der Rueckgabewert liegt (analog zu den 
     * Parametern des RPC als serialisiertes Objekte vor. Falls die aufgerufende Methode
     * keinen Rueckgabewerte hatte, so ist hier 'null' zu uebertragen
     * (diese Verhalten wird automatisch von Method#invoke(Class&lt;?&gt; clazz, Object... args)
     * gewaehrleistet.
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes result = 1;</code>
     *
     * <pre>
     * Rueckgabewert des RPC. Diese Wert muss vorhanden sein, falls keine Exception
     * waerend des Aufrufes aufgetreten ist. Der Rueckgabewert liegt (analog zu den 
     * Parametern des RPC als serialisiertes Objekte vor. Falls die aufgerufende Methode
     * keinen Rueckgabewerte hatte, so ist hier 'null' zu uebertragen
     * (diese Verhalten wird automatisch von Method#invoke(Class&lt;?&gt; clazz, Object... args)
     * gewaehrleistet.
     * </pre>
     */
    public com.google.protobuf.ByteString getResult() {
      return result_;
    }

    public static final int EXCEPTION_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString exception_;
    /**
     * <code>optional bytes exception = 2;</code>
     *
     * <pre>
     * Falls waerend des RPCs ein Versagen auftritt (die Methode kann nicht gefunden werden,
     * die Klasse kann nicht gefunden werden, die Methode wirft eine Exception) dann wird
     * mit diesem Feld die aufgetretende Exception an den Aufrufenden zurueck geliefert.
     * </pre>
     */
    public boolean hasException() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes exception = 2;</code>
     *
     * <pre>
     * Falls waerend des RPCs ein Versagen auftritt (die Methode kann nicht gefunden werden,
     * die Klasse kann nicht gefunden werden, die Methode wirft eine Exception) dann wird
     * mit diesem Feld die aufgetretende Exception an den Aufrufenden zurueck geliefert.
     * </pre>
     */
    public com.google.protobuf.ByteString getException() {
      return exception_;
    }

    private void initFields() {
      result_ = com.google.protobuf.ByteString.EMPTY;
      exception_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, exception_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, exception_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static rpc.protobuf.RPCProtocol.RPCResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.protobuf.RPCProtocol.RPCResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.protobuf.RPCProtocol.RPCResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.protobuf.RPCProtocol.RPCResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.protobuf.RPCProtocol.RPCResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rpc.protobuf.RPCProtocol.RPCResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static rpc.protobuf.RPCProtocol.RPCResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static rpc.protobuf.RPCProtocol.RPCResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static rpc.protobuf.RPCProtocol.RPCResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rpc.protobuf.RPCProtocol.RPCResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rpc.protobuf.RPCProtocol.RPCResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rpc.protobuf.RPCResult}
     *
     * <pre>
     * Ergebnis es RPC - Diese Nachricht dient dazu das Ergebnis eines entfernten Methodenaufrufen
     * an den Aufrufenden zurueck zu liefern.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.protobuf.RPCResult)
        rpc.protobuf.RPCProtocol.RPCResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rpc.protobuf.RPCProtocol.internal_static_rpc_protobuf_RPCResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rpc.protobuf.RPCProtocol.internal_static_rpc_protobuf_RPCResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rpc.protobuf.RPCProtocol.RPCResult.class, rpc.protobuf.RPCProtocol.RPCResult.Builder.class);
      }

      // Construct using rpc.protobuf.RPCProtocol.RPCResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        exception_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rpc.protobuf.RPCProtocol.internal_static_rpc_protobuf_RPCResult_descriptor;
      }

      public rpc.protobuf.RPCProtocol.RPCResult getDefaultInstanceForType() {
        return rpc.protobuf.RPCProtocol.RPCResult.getDefaultInstance();
      }

      public rpc.protobuf.RPCProtocol.RPCResult build() {
        rpc.protobuf.RPCProtocol.RPCResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rpc.protobuf.RPCProtocol.RPCResult buildPartial() {
        rpc.protobuf.RPCProtocol.RPCResult result = new rpc.protobuf.RPCProtocol.RPCResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.exception_ = exception_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rpc.protobuf.RPCProtocol.RPCResult) {
          return mergeFrom((rpc.protobuf.RPCProtocol.RPCResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rpc.protobuf.RPCProtocol.RPCResult other) {
        if (other == rpc.protobuf.RPCProtocol.RPCResult.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasException()) {
          setException(other.getException());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        rpc.protobuf.RPCProtocol.RPCResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rpc.protobuf.RPCProtocol.RPCResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString result_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes result = 1;</code>
       *
       * <pre>
       * Rueckgabewert des RPC. Diese Wert muss vorhanden sein, falls keine Exception
       * waerend des Aufrufes aufgetreten ist. Der Rueckgabewert liegt (analog zu den 
       * Parametern des RPC als serialisiertes Objekte vor. Falls die aufgerufende Methode
       * keinen Rueckgabewerte hatte, so ist hier 'null' zu uebertragen
       * (diese Verhalten wird automatisch von Method#invoke(Class&lt;?&gt; clazz, Object... args)
       * gewaehrleistet.
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes result = 1;</code>
       *
       * <pre>
       * Rueckgabewert des RPC. Diese Wert muss vorhanden sein, falls keine Exception
       * waerend des Aufrufes aufgetreten ist. Der Rueckgabewert liegt (analog zu den 
       * Parametern des RPC als serialisiertes Objekte vor. Falls die aufgerufende Methode
       * keinen Rueckgabewerte hatte, so ist hier 'null' zu uebertragen
       * (diese Verhalten wird automatisch von Method#invoke(Class&lt;?&gt; clazz, Object... args)
       * gewaehrleistet.
       * </pre>
       */
      public com.google.protobuf.ByteString getResult() {
        return result_;
      }
      /**
       * <code>optional bytes result = 1;</code>
       *
       * <pre>
       * Rueckgabewert des RPC. Diese Wert muss vorhanden sein, falls keine Exception
       * waerend des Aufrufes aufgetreten ist. Der Rueckgabewert liegt (analog zu den 
       * Parametern des RPC als serialisiertes Objekte vor. Falls die aufgerufende Methode
       * keinen Rueckgabewerte hatte, so ist hier 'null' zu uebertragen
       * (diese Verhalten wird automatisch von Method#invoke(Class&lt;?&gt; clazz, Object... args)
       * gewaehrleistet.
       * </pre>
       */
      public Builder setResult(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes result = 1;</code>
       *
       * <pre>
       * Rueckgabewert des RPC. Diese Wert muss vorhanden sein, falls keine Exception
       * waerend des Aufrufes aufgetreten ist. Der Rueckgabewert liegt (analog zu den 
       * Parametern des RPC als serialisiertes Objekte vor. Falls die aufgerufende Methode
       * keinen Rueckgabewerte hatte, so ist hier 'null' zu uebertragen
       * (diese Verhalten wird automatisch von Method#invoke(Class&lt;?&gt; clazz, Object... args)
       * gewaehrleistet.
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = getDefaultInstance().getResult();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString exception_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes exception = 2;</code>
       *
       * <pre>
       * Falls waerend des RPCs ein Versagen auftritt (die Methode kann nicht gefunden werden,
       * die Klasse kann nicht gefunden werden, die Methode wirft eine Exception) dann wird
       * mit diesem Feld die aufgetretende Exception an den Aufrufenden zurueck geliefert.
       * </pre>
       */
      public boolean hasException() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes exception = 2;</code>
       *
       * <pre>
       * Falls waerend des RPCs ein Versagen auftritt (die Methode kann nicht gefunden werden,
       * die Klasse kann nicht gefunden werden, die Methode wirft eine Exception) dann wird
       * mit diesem Feld die aufgetretende Exception an den Aufrufenden zurueck geliefert.
       * </pre>
       */
      public com.google.protobuf.ByteString getException() {
        return exception_;
      }
      /**
       * <code>optional bytes exception = 2;</code>
       *
       * <pre>
       * Falls waerend des RPCs ein Versagen auftritt (die Methode kann nicht gefunden werden,
       * die Klasse kann nicht gefunden werden, die Methode wirft eine Exception) dann wird
       * mit diesem Feld die aufgetretende Exception an den Aufrufenden zurueck geliefert.
       * </pre>
       */
      public Builder setException(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        exception_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes exception = 2;</code>
       *
       * <pre>
       * Falls waerend des RPCs ein Versagen auftritt (die Methode kann nicht gefunden werden,
       * die Klasse kann nicht gefunden werden, die Methode wirft eine Exception) dann wird
       * mit diesem Feld die aufgetretende Exception an den Aufrufenden zurueck geliefert.
       * </pre>
       */
      public Builder clearException() {
        bitField0_ = (bitField0_ & ~0x00000002);
        exception_ = getDefaultInstance().getException();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:rpc.protobuf.RPCResult)
    }

    static {
      defaultInstance = new RPCResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:rpc.protobuf.RPCResult)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_protobuf_RPCCall_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rpc_protobuf_RPCCall_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_protobuf_RPCResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rpc_protobuf_RPCResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032src/rpc/protobuf/rpc.proto\022\014rpc.protob" +
      "uf\"D\n\007RPCCall\022\021\n\tclassname\030\001 \002(\t\022\022\n\nmeth" +
      "odname\030\002 \002(\t\022\022\n\nparameters\030\003 \003(\014\".\n\tRPCR" +
      "esult\022\016\n\006result\030\001 \001(\014\022\021\n\texception\030\002 \001(\014" +
      "B\033\n\014rpc.protobufB\013RPCProtocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_rpc_protobuf_RPCCall_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_rpc_protobuf_RPCCall_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_rpc_protobuf_RPCCall_descriptor,
        new java.lang.String[] { "Classname", "Methodname", "Parameters", });
    internal_static_rpc_protobuf_RPCResult_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_rpc_protobuf_RPCResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_rpc_protobuf_RPCResult_descriptor,
        new java.lang.String[] { "Result", "Exception", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
